def Shape as (Float l, Float u, ZonoExp z){[(curr[l]<=curr),(curr[u]>=curr),(curr In curr[z])]};

func simplify_lower(Neuron n, Float coeff) = (coeff >= 0) ? (coeff * n[l]) : (coeff * n[u]);
func simplify_upper(Neuron n, Float coeff) = (coeff >= 0) ? (coeff * n[u]) : (coeff * n[l]);

func priority(Neuron n) = n[layer];


transformer zono(curr, prev){
    Relu -> (sum(prev[l]) >= 0) ? (sum(prev[l]), sum(prev[u]), sum(prev[z])) : ((sum(prev[u]) <= 0) ? (0, 0, 0) : (0, sum(prev[u]), (sum(prev[u]) / 2) + ((sum(prev[u]) / 2) * eps)));
}

flow(forward, priority, true, zono);