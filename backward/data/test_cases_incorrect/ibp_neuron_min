def Shape as (Float l, Float u){[(curr[l]<=curr),(curr[u]>=curr)]};

func min_lower(Neuron n1, Neuron n2) = n1[l]>=n2[l] ? n1[l] : n2[l];
func min_upper(Neuron n1, Neuron n2) = n1[u]<=n2[u] ? n1[u] : n2[u];

func priority(Neuron n) = n[layer];

transformer ibp{
    Neuron_min -> (min_lower(prev_0, prev_1), min_upper(prev_0, prev_1));
}

flow(forward, priority, true, ibp);