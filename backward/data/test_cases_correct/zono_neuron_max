def Shape as (Float l, Float u, ZonoExp z){[(curr[l]<=curr),(curr[u]>=curr),(curr In curr[z])]};

func simplify_lower(Neuron n, Float coeff) = (coeff >= 0) ? (coeff * n[l]) : (coeff * n[u]);
func simplify_upper(Neuron n, Float coeff) = (coeff >= 0) ? (coeff * n[u]) : (coeff * n[l]);

func priority(Neuron n) = n[layer];


transformer zono{
     Neuron_max -> (prev_0[l] >= prev_1[u]) ? (prev_0[l], prev_0[u], prev_0[z]) : ((prev_1[l] >= prev_0[u]) ? (prev_1[l], prev_1[u], prev_1[z]) : (max(prev_0[l], prev_1[l]), max(prev_0[u], prev_1[u]), (0.5*(max(prev_0[l], prev_1[l]) + max(prev_0[u], prev_1[u]))) + (0.5*eps*(max(prev_0[u], prev_1[u]) - max(prev_0[l], prev_1[l])))));
}

flow(forward, priority, true, zono);