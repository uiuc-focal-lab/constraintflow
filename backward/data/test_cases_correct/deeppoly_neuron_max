def Shape as (Float l, Float u, PolyExp L, PolyExp U){[(curr[l]<=curr),(curr[u]>=curr),(curr[L]<=curr),(curr[U]>=curr)]};


func priority(Neuron n) = n[layer];

transformer deeppoly{
    Neuron_max -> (prev_0[l] >= prev_1[u]) ? (prev_0[l], prev_0[u], prev_0, prev_0) : ((prev_1[l] >= prev_0[u]) ? (prev_1[l], prev_1[u], prev_1, prev_1) : (max(prev_0[l], prev_1[l]), max(prev_0[u], prev_1[u]), max(prev_0[l], prev_1[l]), max(prev_0[u], prev_1[u])));
}

flow(forward, priority, true, deeppoly);