def Shape as (Float l, Float u, ZonoExp z, Ct c){[(curr[l]<=curr),(curr[u]>=curr),(curr In curr[z]),curr[c]]};

func simplify_lower(Neuron n, Float coeff) = (coeff >= 0) ? (coeff * n[l]) : (coeff * n[u]);
func simplify_upper(Neuron n, Float coeff) = (coeff >= 0) ? (coeff * n[u]) : (coeff * n[l]);

func priority(Neuron n) = n[layer];
func foo(Neuron n) = n[c];

transformer refinezono{
    Relu6 -> ((prev[l]) >= 6) ? 
                (6, 6, 6, curr == 6) : 
                (((prev[u]) <= 0) ? 
                    (0, 0, 0, curr == 0) : 
                    ((prev[l] >= 0) and (prev[u] <= 6) ? 
                        (prev[l],prev[u], prev[z], curr == prev) : 
                        (prev[l] > 0 ? 
                            (prev[l], 6, ((6 + prev[l]) / 2) + (eps * ((6 - prev[l]) / 2)), ((curr <= 6) and (curr >= prev[l])) ) : 
                            (prev[u] < 6 ? 
                                (0, (prev[u]), (1 + eps) * (prev[u] / 2), ((curr >= 0) and (curr <= prev[u]))) :
                                (0, 6, (1 + eps) * 3, ((curr >= 0) and (curr <= 6)))
                                ))));
}

flow(forward, priority, true, refinezono);