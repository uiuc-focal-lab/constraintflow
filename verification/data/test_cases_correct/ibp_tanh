def Shape as (Float l, Float u){[(curr[l]<=curr),(curr[u]>=curr)]};

func simplify_lower(Neuron n, Float coeff) = (coeff >= 0) ? (coeff * n[l]) : (coeff * n[u]);
func simplify_upper(Neuron n, Float coeff) = (coeff >= 0) ? (coeff * n[u]) : (coeff * n[l]);

func priority(Neuron n) = n[layer];

func ht(Float r) = max(-1, min(1, r));

transformer ibp{
    HardTanh -> (ht(prev[l]), ht(prev[u]));
}

flow(forward, priority, true, ibp);