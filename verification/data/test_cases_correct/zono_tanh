def Shape as (Float l, Float u, ZonoExp z){[(curr[l]<=curr),(curr[u]>=curr),(curr In curr[z])]};

func simplify_lower(Neuron n, Float coeff) = (coeff >= 0) ? (coeff * n[l]) : (coeff * n[u]);
func simplify_upper(Neuron n, Float coeff) = (coeff >= 0) ? (coeff * n[u]) : (coeff * n[l]);

func priority(Neuron n) = n[layer];

transformer zono{
    HardTanh -> ((prev[l]) >= 1) ? 
                    (1, 1, 1) : 
                    (((prev[u]) <= -1) ? 
                        (-1, -1, -1) : 
                        ((prev[l] >= -1) and (prev[u] <= 1) ? 
                            (prev[l], prev[u], prev[z]) : 
                            (prev[l] > -1 ? 
                                (prev[l], 1, (prev[l] + 1)/2 + (eps * (1 - prev[l])/2) ) : 
                                (prev[u] < 1 ? 
                                    (-1, prev[u], (prev[u] - 1)/2 + (((prev[u] + 1)/2) * eps)) :
                                    (-1, 1, eps)
                                    ))));
}

flow(forward, priority, true, zono);