def Shape as (Float l, Float u, PolyExp L, PolyExp U, ZonoExp z){[curr[l]<=curr,curr[u]>=curr,curr[L]<=curr,curr[U]>=curr,curr In curr[z]]};

func add_lower(Neuron n1, Neuron n2) = n1[l] + n2[l];
func add_upper(Neuron n1, Neuron n2) = n1[u] + n2[u];

func priority(Neuron n) = n[layer];

transformer polyzono{
    Neuron_add -> (add_lower(prev_0, prev_1), add_upper(prev_0, prev_1), (prev_0 + prev_1), (prev_0 + prev_1), (prev_0[z]+prev_1[z]));
}

flow(forward, priority, true, polyzono);