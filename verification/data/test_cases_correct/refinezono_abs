def Shape as (Float l, Float u, ZonoExp z, Ct c){[(curr[l]<=curr),(curr[u]>=curr),(curr In curr[z]),curr[c]]};

func simplify_lower(Neuron n, Float coeff) = (coeff >= 0) ? (coeff * n[l]) : (coeff * n[u]);
func simplify_upper(Neuron n, Float coeff) = (coeff >= 0) ? (coeff * n[u]) : (coeff * n[l]);

func priority(Neuron n) = n[layer];
func foo(Neuron n) = n[c];

transformer zono{
    Abs -> (prev[l] >= 0) ? 
        (prev[l], prev[u], prev[z], (prev == curr)) : 
            (prev[u] <= 0) ? 
                (-prev[u], -prev[l], -prev[z], (curr == -prev)) : 
                (0, max(-prev[l], prev[u]), (max(-prev[l], prev[u]) / 2) + ((max(-prev[l], prev[u]) / 2) * eps), 
                (((prev <= 0) and (curr == -prev) ) or ((prev > 0) and (curr == prev)) )
                )
        ;
}

flow(forward, priority, true, zono);