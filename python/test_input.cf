def Shape as (Float l, Float u, PolyExp L, PolyExp U){(curr[l] - 1 <=curr) and (curr[L]<=curr) and (curr[u]>=curr) and (curr[U]>=curr)};

func priority1(Neuron n) = -n[layer];
func priority2(Neuron n) = n[layer];

transformer deeppoly(curr, prev){
    Relu -> (curr[l],curr[u],curr[L],curr[U]);
}

flow(forward, priority2, true, deeppoly);